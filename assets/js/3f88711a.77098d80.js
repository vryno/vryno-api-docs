"use strict";(self.webpackChunkapi_docs=self.webpackChunkapi_docs||[]).push([[7142],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,g=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return r?n.createElement(g,s(s({ref:t},u),{},{components:r})):n.createElement(g,s({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3581:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},s="Bulk Import Jobs",i={unversionedId:"Types-of-queries-and-mutations/Bulk Job Imports",id:"Types-of-queries-and-mutations/Bulk Job Imports",title:"Bulk Import Jobs",description:"QUERY",source:"@site/docs/Types-of-queries-and-mutations/Bulk Job Imports.md",sourceDirName:"Types-of-queries-and-mutations",slug:"/Types-of-queries-and-mutations/Bulk Job Imports",permalink:"/docs/Types-of-queries-and-mutations/Bulk Job Imports",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Types-of-queries-and-mutations/Bulk Job Imports.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Types of Queries and Mutations",permalink:"/docs/category/types-of-queries-and-mutations"},next:{title:"Attachments",permalink:"/docs/Types-of-queries-and-mutations/Attachment"}},p={},l=[{value:"<strong>QUERY</strong>",id:"query",level:2},{value:"<strong>Type details</strong>",id:"type-details",level:3},{value:"<strong>Argument</strong>",id:"argument",level:3},{value:"Request: To Search Attachment record",id:"request-to-search-attachment-record",level:3},{value:"Sample Response",id:"sample-response",level:3}],u={toc:l};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bulk-import-jobs"},"Bulk Import Jobs"),(0,a.kt)("h2",{id:"query"},(0,a.kt)("strong",{parentName:"h2"},"QUERY")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"fetchBulkImportJob(\nfilters: [FetchFilter]\nexpression: String\norderBy: [FetchOrderBy]\ncustomViewId: String\npageNumber: Int\nrecordsPerPage: Int\n): FetchBulkImportJobResponse\n")),(0,a.kt)("h3",{id:"type-details"},(0,a.kt)("strong",{parentName:"h3"},"Type details")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type FetchBulkImportJobResponse {\ncode: Int!\nmessage: String!\nstatus: Boolean!\nmessageKey: String!\ndata: [BulkImportJob]\n}\n\ntype BulkImportJob {\nid: String\nrecordStatus: String\ncreatedBy: String\ncreatedAt: String\nupdatedBy: String\nupdatedAt: String\nrequestId: String\nmoduleUniqueName: String\nfileName: String\nfileKey: String\nmappingId: String\n}\n")),(0,a.kt)("h3",{id:"argument"},(0,a.kt)("strong",{parentName:"h3"},"Argument")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type FetchFilter {\noperator: String!\nname: String!\nvalue: [String]\nlogicalOperator: String\n}\n\nscalar String\n\ntype FetchOrderBy {\nname: String!\norder: [FetchOrder]\n}\n\n")),(0,a.kt)("h3",{id:"request-to-search-attachment-record"},"Request: To Search Attachment record"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  fetchBulkImportJob\n  {\n    code \n    messageKey \n    data{\n      id \n      fileName\n    }\n  }\n}\n")),(0,a.kt)("h3",{id:"sample-response"},"Sample Response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  "data": {\n    "fetchBulkImportJob": {\n      "code": 200,\n      "messageKey": "bulkimportjob-search-success",\n      "data": []\n    }\n  }\n}\n')))}c.isMDXComponent=!0}}]);